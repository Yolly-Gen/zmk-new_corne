#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp ESC         &kp Q  &kp W  &kp E             &kp R         &kp T                          &kp UP                &kp Y        &kp U      &kp I            &kp O    &kp P     &kp BSPC
&kp TAB         &kp A  &kp S  &kp D             &kp F         &kp G                &kp LEFT  &kp ENTER  &kp RIGHT  &kp H        &kp J      &kp K            &kp L    &kp SEMI  &kp SQT
&kp LEFT_SHIFT  &kp Z  &kp X  &kp C             &kp V         &kp B  &kp K_MUTE              &kp DOWN              &kp N        &kp M      &kp COMMA        &kp DOT  &kp FSLH  &kp DELETE
                              &kp LEFT_CONTROL  &kp LEFT_GUI  &mo 1                                                &lt 2 ENTER  &kp SPACE  &lt 3 LC(SPACE)
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        layer_1 {
            display-name = "NUMBER";
            bindings = <
&kp TILDE  &kp GRAVE  &td0      &kp UP    &td0       &td0                                &mmv MOVE_UP                     &kp MINUS  &kp N7     &kp N8         &kp N9  &kp SLASH  &kp BACKSPACE
&td0       &td0       &kp LEFT  &kp DOWN  &kp RIGHT  &td0                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp PLUS   &kp N4     &kp N5         &kp N6  &kp ASTRK  &td0
&td0       &td0       &td0      &none     &td0       &td0  &kp C_MUTE                    &mmv MOVE_DOWN                   &td0       &kp N1     &kp N2         &kp N3  &td0       &td0
                                &td0      &td0       &td0                                                                 &kp N0     &kp SPACE  &kp BACKSPACE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        layer_2 {
            display-name = "FUNTION";
            bindings = <
&td0           &td0      &td0  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &td0                                &mmv MOVE_UP                     &kp F1  &kp F2  &kp F3  &kp F4   &kp F5   &kp F6
&kp BACKSLASH  &kp PIPE  &td0  &kp LEFT_BRACE    &kp RIGHT_BRACE    &td0                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&td0           &td0      &td0  &none             &none              &td0  &kp C_MUTE                    &mmv MOVE_DOWN                   &kp F4  &td0    &td0    &td0     &td0     &td0
                               &td0              &td0               &td0                                                                 &td0    &td0    &td0
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        layer_3 {
            display-name = "OPTION";
            bindings = <
&bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &td0                                           &mmv MOVE_UP                     &rgb_ug RGB_ON  &rgb_ug RGB_OFF  &rgb_ug RGB_EFR  &rgb_ug RGB_EFF  &rgb_ug RGB_SPD  &rgb_ug RGB_SPI
&td0            &td0          &td0          &td0          &td0          &td0                           &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &bl BL_ON       &bl BL_OFF       &bl BL_DEC       &bl BL_INC       &td0             &bl BL_CYCLE
&bt BT_CLR_ALL  &bt BT_CLR    &td0          &none         &bt BT_PRV    &bt BT_NXT  &rgb_ug RGB_TOG                    &mmv MOVE_DOWN                   &td0            &td0             &td0             &td0             &td0             &td0
                                            &td0          &td0          &td0                                                                            &td0            &td0             &td0
            >;

            sensor-bindings = <&inc_dec_kp C_BRIGHTNESS_INC C_BRIGHTNESS_DEC>;
        };

        lower_layer {
            display-name = "sample";
            bindings = <
&trans  &kp N1           &kp N2          &kp N3        &kp N4        &kp N5                                         &mmv MOVE_UP                     &kp N6           &kp N7           &kp N8           &kp N9           &kp N0    &kp BSPC
&trans  &bt BT_CLR_ALL   &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3                   &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp LEFT         &kp DOWN         &kp UP           &kp RIGHT        &kp HOME  &kp PG_UP
&trans  &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &trans        &trans        &rgb_ug RGB_EFF  &kp C_MUTE                    &mmv MOVE_DOWN                   &rgb_ug RGB_EFR  &rgb_ug RGB_SPI  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &kp END   &kp PG_DN
                                         &trans        &trans        &trans                                                                          &kp INS          &kp DEL          &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};
